buildscript {
  // uncomment for local testing  
  //**********************************************************
  // repositories {
  //   flatDir { dirs '../build/libs' }
  //   mavenCentral()
  //   jcenter()
  // }

  // dependencies {
  //   classpath ':gradle-jaxb-plugin-1.3.6'
  //   classpath 'com.google.inject:guice:3.0'
  //   classpath 'com.github.jacobono:gradle-xsd-wsdl-slurping:1.1.2'
  // }
  //**********************************************************

  // use artifacts from bintray
  //******************************************************
  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
  }
}

allprojects { 
  repositories {
    mavenCentral()
  }
}

subprojects { project ->
  if(project.name.endsWith("-schema") ||
          Boolean.valueOf(project.getProperties().getOrDefault('doJAXB', 'false'))) {
    apply plugin: 'com.github.jacobono.jaxb'

    dependencies {
      // TODO: jaxws 2.2.6 uses jaxb 2.2.5, but can't dL 2.2.5 from maven the pom is off
      jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
      jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
      jaxb 'javax.xml.bind:jaxb-api:2.2.7'
    }

    File generatedDir = new File('build/generated-sources/xjc')
    generatedDir.mkdirs()

    jaxb {
      xjc {
        destinationDir = "$generatedDir"
      }
    }

    apply plugin: 'scala'

    dependencies {
      // 54.4. Dependency management
      compile 'org.scala-lang:scala-library:2.11.1'
      compile 'com.typesafe.scala-logging:scala-logging-slf4j_2.11:2.1.2'
      // 7.2. Declaring your dependencies
      testCompile group: 'junit', name: 'junit', version: '4.11'
    }

    sourceSets {
      main {
        scala {
          srcDirs += "$generatedDir"
        }
      }
    }
  }
}

tasks.withType(ScalaCompile) {
  // 54.9. Compiling in external process
  configure(scalaCompileOptions.forkOptions) {
    memoryMaximumSize = '1g'
  }
  // 54.10. Incremental compilation
  scalaCompileOptions.useAnt = false
}

task xjc {
  // This is needed for Java 8.
  System.setProperty('javax.xml.accessExternalSchema', 'file')
}
